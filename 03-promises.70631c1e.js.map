{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEaC,SAASC,cAAc,QAE/BC,iBAAiB,UAStB,SAAsBC,GACpBA,EAAMC,iBAON,IALA,IAGIC,EAHAC,EAAaH,EAAMI,cAAcC,SAASC,MAAMC,MAChDC,EAASR,EAAMI,cAAcC,SAASG,OAAOD,MAC7CE,EAAYT,EAAMI,cAAcC,SAASK,KAAKH,MAGzCI,EAAI,EAAGA,GAAKH,EAAQG,GAAK,EAChCT,EAAaC,EACTQ,GAAK,IACPT,EAAaU,OAAOT,GAAcS,OAAOH,GAAaE,EAAI,KAG5DE,EAAcF,EAAGT,GAAYY,KAAKC,GAAUC,MAAMC,GAElDC,QAAQC,IAAI,YAAcC,OAAFT,EAAE,6BAA6BT,EAAa,MAGtEF,EAAMI,cAAciB,O,IA1BtB,IAAMN,EAAW,SAAAO,G,IAAGC,EAAQD,EAARC,SAAUjB,EAAKgB,EAALhB,MAC5BkB,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAwCN,OAAfG,EAAS,QAAYH,OAANd,EAAM,M,EAElEW,EAAW,SAAAK,G,IAAGC,EAAQD,EAARC,SAAUjB,EAAKgB,EAALhB,MAC5BkB,EAAA7B,GAAS8B,OAAOE,QAAQ,sBAAqCP,OAAfG,EAAS,QAAYH,OAANd,EAAM,M,EAyBrE,SAASO,EAAcU,EAAUjB,GAC/B,IAAMsB,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAET,WAAUjB,UAEpB2B,EAAO,CAAEV,WAAUjB,S,GAEpBA,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('form');\n\nform.addEventListener('submit', onFormSubmit);\n\nconst resolved = ({ position, delay }) => {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n};\nconst rejected = ({ position, delay }) => {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n};\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  let firstDelay = event.currentTarget.elements.delay.value;\n  let amount = event.currentTarget.elements.amount.value;\n  let delayStep = event.currentTarget.elements.step.value;\n  let totalDelay;\n\n  for (let i = 1; i <= amount; i += 1) {\n    totalDelay = firstDelay;\n    if (i >= 2) {\n      totalDelay = Number(firstDelay) + Number(delayStep * (i - 1));\n    }\n\n    createPromise(i, totalDelay).then(resolved).catch(rejected);\n\n    console.log(`Promise #${i} will be processed after ` + totalDelay + 'ms');\n  }\n\n  event.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iU1Pc","parcelRequire","document","querySelector","addEventListener","event","preventDefault","totalDelay","firstDelay","currentTarget","elements","delay","value","amount","delayStep","step","i","Number","$ce04d3a99e08e73b$var$createPromise","then","$ce04d3a99e08e73b$var$resolved","catch","$ce04d3a99e08e73b$var$rejected","console","log","concat","reset","param","position","$parcel$interopDefault","Notify","success","failure","shouldResolve","Math","random","Promise","resolve","reject","setTimeout"],"version":3,"file":"03-promises.70631c1e.js.map"}